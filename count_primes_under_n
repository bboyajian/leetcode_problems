Given a positive integer n, how many prime numbers less than n are there?

import math
class Solution:
    def countPrimes(self, n: int) -> int:
        if n < 3:
            return 0
        if n == 3:
            return 1
        m = math.floor(n/3) + (n%6 == 2)
        l = [1]*m
        nn = math.ceil(math.sqrt(n))
        mm = math.floor(nn/3) + (nn%6 == 2)
        for i in range(1, mm):
            if l[i] == 1:
                r = i%2
                j = 3*i + 1 + r
                idx = (i+r) * (j+1-2*r)
                step = (j+i+r, j-i-r)
				idx2 = r
                while idx < m:
                    l[idx] = 0
                    idx += step[idx2]
                    idx2 = 1 - idx2
        return sum(l) + 1
